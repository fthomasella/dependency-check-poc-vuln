name: OSV-Scanner Workflow

# Define quando o workflow será executado
on: [push]

# Permissões necessárias para enviar relatórios ao GitHub
permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  osv-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Instala o Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Use uma versão recente e estável do Go
          check-latest: true

      # 3. Instala o OSV-Scanner
      - name: Install OSV-Scanner
        run: go install github.com/google/osv-scanner/v2/cmd/osv-scanner@latest

      # 4. Verifica a instalação do OSV-Scanner
      - name: Verify OSV-Scanner installation
        run: |
          if ! command -v osv-scanner &> /dev/null; then
            echo "OSV-Scanner não foi instalado corretamente"
            exit 1
          else
            echo "OSV-Scanner instalado com sucesso"
            osv-scanner --version
          fi
        env:
          PATH: ${{ env.HOME }}/go/bin:$PATH # Adiciona o diretório do Go ao PATH

      # 5. Executa o OSV-Scanner no repositório
      - name: Run OSV-Scanner
        run: osv-scanner --recursive --format sarif --output results.sarif .
        env:
          PATH: ${{ env.HOME }}/go/bin:$PATH

      # 6. Envia o relatório SARIF para o GitHub
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        if: always() # Garante que o relatório seja enviado mesmo se o scan falhar
